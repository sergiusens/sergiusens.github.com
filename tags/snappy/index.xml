<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snappy on </title>
    <link>http://blog.sergiusens.org/tags/snappy/</link>
    <description>Recent content in Snappy on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Feb 2019 14:48:31 -0300</lastBuildDate>
    
	<atom:link href="http://blog.sergiusens.org/tags/snappy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Snapcraft 3.1</title>
      <link>http://blog.sergiusens.org/posts/snapcraft-3.1/</link>
      <pubDate>Tue, 05 Feb 2019 14:48:31 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/snapcraft-3.1/</guid>
      <description>snapcraft 3.1 is now available on the stable channel of the Snap Store. This is a new minor release building on top of the foundations laid out from the snapcraft 3.0 release.
If you are already on the stable channel for snapcraft then all you need to do is wait for the snap to be refreshed.
The full release notes are replicated here below
Build Environments It is now possible, when using the base keyword, to once again clean parts.</description>
    </item>
    
    <item>
      <title>Snapcraft 3.0</title>
      <link>http://blog.sergiusens.org/posts/snapcraft-3.0/</link>
      <pubDate>Fri, 30 Nov 2018 16:47:42 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/snapcraft-3.0/</guid>
      <description>The release notes for snapcraft 3.0 have been long overdue. For convenience I will reproduce them here too.
Presenting snapcraft 3.0 The arrival of snapcraft 3.0 brings fresh air into how snap development takes place!
We took the learnings from the main pain points you had when creating snaps in the past several years, and we we introduced those lessons into a brand new release - snapcraft 3.0!
Build Environments As the cornerstone for behavioral change, we are introducing the concept of build environments.</description>
    </item>
    
    <item>
      <title>Snapcraft Build Environments</title>
      <link>http://blog.sergiusens.org/posts/snapcraft-build-environments/</link>
      <pubDate>Mon, 30 Jul 2018 17:47:42 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/snapcraft-build-environments/</guid>
      <description>Prologue After a week away from my computer I want to organize my thoughts on the progress made towards build VMs by providing this write up since that forum post can be a bit overwhelming if you are casually wanting to keep up to date.
The reasons for this feature work to exist, for those not up to speed, is that we want to have a very consistent build environment for which anyone building a project can have an expectable outcome of a working snap (or non working one if it really doesn&amp;rsquo;t).</description>
    </item>
    
    <item>
      <title>UbuConLA 2017 Summit Summary</title>
      <link>http://blog.sergiusens.org/posts/ubuconla-2017-summit-summary/</link>
      <pubDate>Wed, 23 Aug 2017 13:29:02 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/ubuconla-2017-summit-summary/</guid>
      <description>These are my notes about UbuconLA, a bit of social activities and thoughts on the talks related to the snappy ecosystem.
Arriving I left late on thursday for a planned night arrival into Lima, Leo was going to be arriving around 2 hours earlier than me flying in from Costa Rica.
Once the plane I was on coming from Cordoba, Argentina landed into Lima I got onto an ad-hoc telegram group we had created and mentioned that I had landed and discovered Leo was still trying to Uber out of there.</description>
    </item>
    
    <item>
      <title>Making your snaps available to the store using snapcraft</title>
      <link>http://blog.sergiusens.org/posts/making-your-snaps-available-to-the-store-using-snapcraft/</link>
      <pubDate>Fri, 04 Nov 2016 13:58:35 +0200</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/making-your-snaps-available-to-the-store-using-snapcraft/</guid>
      <description>Now that Ubuntu Core has been officially released, it might be a good time to get your snaps into the Store.
Delivery and Store Concepts So let&amp;rsquo;s start with a refresher on what we have available on the Store side to manage your snaps.
Every time you push a snap to the store, the store will assign it a revision, this revision is unique in the store for this particular snap.</description>
    </item>
    
    <item>
      <title>The Snapcraft Parts Ecosystem</title>
      <link>http://blog.sergiusens.org/posts/the-snapcraft-parts-ecosystem/</link>
      <pubDate>Mon, 27 Jun 2016 12:57:07 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/the-snapcraft-parts-ecosystem/</guid>
      <description>Today I am going to be discussing parts. This is one of the pillars of snapcraft (together with plugins and the lifecycle).
For those not familiar, this is snapcraft&amp;rsquo;s general purpose landing page, http://snapcraft.io/ but if you are a developer and have already been introduced to this new world of snaps, you probably want to just go and hop on to http://snapcraft.io/create/
If you go over this snapcraft tour you will notice the many uses of parts and start to wonder how to get started or think that maybe you are duplicating work done by others, or even better, maybe an upstream.</description>
    </item>
    
    <item>
      <title>Snapcrafting a kernel</title>
      <link>http://blog.sergiusens.org/posts/snapcrafting-a-kernel/</link>
      <pubDate>Mon, 21 Mar 2016 21:06:57 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/snapcrafting-a-kernel/</guid>
      <description>Introduction With snapcraft 2.5 which can be installed on the upcoming 16.04 Xenial Xerus with apt or consumed from the 2.5 tag on github we have included two interesting plugins: kbuild and kernel.
The kbuild plugin is interesting in itself, but here we will be discussing the kernel plugin which is based out of the kbuild one.
A note of caution though, this kernel plugin is still not considered production ready.</description>
    </item>
    
    <item>
      <title>Linaro Connect BKK16</title>
      <link>http://blog.sergiusens.org/posts/bkk16/</link>
      <pubDate>Mon, 21 Mar 2016 17:31:57 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/bkk16/</guid>
      <description>Just a week ago I made my way back from Linaro Connect. It is my first time at a Linaro Connect that was not jointly done with a UDS and even then I did not participate in the event. It was also my first time in Thailand and to a greater extent Asia so I was very interested in going.
The main purpose for attending was to show snappy and in particular, snapcraft.</description>
    </item>
    
    <item>
      <title>UbuConLA 2015 Summary</title>
      <link>http://blog.sergiusens.org/posts/ubuconla-2015-summary/</link>
      <pubDate>Sun, 16 Aug 2015 13:29:02 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/ubuconla-2015-summary/</guid>
      <description>This is a post I never got to publish from way back.
 About UbuConLA Last week I attended the 2015 edition of UbuConLA, a successor to what once was UDS, the Ubuntu Developer Summit which later transformed into vUDS, the v standing for virtual which eventually was renamed to Ubuntu Online Summit. UbuConLA, fully organized by the community, tries to relive the days of UDS for a chance to see face to face with fellow Ubuntu contributors or contributors to be or just people generally interested in Ubuntu.</description>
    </item>
    
    <item>
      <title>Recovering Ubuntu Core</title>
      <link>http://blog.sergiusens.org/posts/recovering-ubuntu-core/</link>
      <pubDate>Sat, 01 Aug 2015 19:36:12 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/recovering-ubuntu-core/</guid>
      <description>Introduction  A note of caution, most of this is an experiment and lacks finess.
 Ubuntu Core was released over half a year ago using this nice thing called snappy, the design allows for transactional updates among others, these updates keep on rolling though their streams and can be kicked out (rolled back) if something was fishy, guaranteeing a certain level of confidence that the system should not break.</description>
    </item>
    
    <item>
      <title>Grub and snappy updates</title>
      <link>http://blog.sergiusens.org/posts/grub-and-snappy-updates/</link>
      <pubDate>Sun, 05 Jul 2015 11:41:56 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/grub-and-snappy-updates/</guid>
      <description>This week, the snappy powered Ubuntu Core landed some interesting changes with regards to how it handles grub based systems.
History The original implementation was based on traditional Ubuntu systems, where a bunch of files that any debian package could setup influenced the resulting grub.cfg that resulted after running update-grub. This produced a grub.cfg that was really hard to manage or debug, and what is most important, out of our control.</description>
    </item>
    
    <item>
      <title>The github or launchpad dilemma</title>
      <link>http://blog.sergiusens.org/posts/the-github-or-launchpad-dilemma/</link>
      <pubDate>Thu, 25 Jun 2015 01:27:20 +0000</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/the-github-or-launchpad-dilemma/</guid>
      <description>We wanted to start a migration path from bazaar to git given how ubiquitous it is and due to the fact that most in our team prefer it. A few months ago the decision was easy, since launchpad did not support git, we would just switch to github given it&amp;rsquo;s popularity. That&amp;rsquo;s not true anymore&amp;hellip;
Today launchpad supports git and our comparison becomes finer grained and we have to break it down a bit more.</description>
    </item>
    
    <item>
      <title>Snappy rolling back on kernel panic</title>
      <link>http://blog.sergiusens.org/posts/snappy_rolling_back_on_kernel_panic/</link>
      <pubDate>Fri, 08 May 2015 12:31:49 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/snappy_rolling_back_on_kernel_panic/</guid>
      <description>Image you get an update and the kernel panics with that update, what are you to do? Suppose now that you have a snappy based system, this is automatically solved for you.
Here’s a short video showing this on a Beagle Bone Black, the concept is quite simple, if there is a panic, we revert to the last known state. In this video I inject an initrd that panics on boot after issuing a snappy update and before rebooting into the update.</description>
    </item>
    
    <item>
      <title>Updates to snappy and ubuntu-device-flash</title>
      <link>http://blog.sergiusens.org/posts/updates-in-snappy-and-ubunu-device-flash/</link>
      <pubDate>Mon, 20 Apr 2015 16:29:39 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/updates-in-snappy-and-ubunu-device-flash/</guid>
      <description>The past few weeks in the snappy world have been a revolt, better said a rapid evolution for it to be closer to what we wanted it to be.
Some things have change, if you are tracking the bleeding edge you will notice a couple of changes, the store for example now exposes packages depending on the OS release, and system images are now built against an OS release as well.</description>
    </item>
    
    <item>
      <title>Preliminary support for dtb override from OEM snaps</title>
      <link>http://blog.sergiusens.org/posts/preliminary-support-for-dtb-override-from-oem-snaps/</link>
      <pubDate>Fri, 30 Jan 2015 11:25:45 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/preliminary-support-for-dtb-override-from-oem-snaps/</guid>
      <description>Today the always in motion ppa ppa:snappy-dev/tools has landed support for overriding the dtb provided by the platform in the device part with one provided by the oem snap.
The package.yaml for the oem snap has been extended a bit to support this, an example follows for extending the am335x-boneblack platform.
name: mydevice.sergiusens vendor: sergiusens icon: meta/icon.png version: 1.0 type: oem branding: name: My device subname: Sergiusens Inc. store: oem-key: 123456 hardware: dtb: mydtb.</description>
    </item>
    
    <item>
      <title>Snappy Things</title>
      <link>http://blog.sergiusens.org/posts/snappy-things/</link>
      <pubDate>Tue, 20 Jan 2015 12:07:57 -0300</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/snappy-things/</guid>
      <description>A while back, Snappy was introduced and it was great, while that was happening we were already working on the next great thing, Snappy for devices, or as everyone calls it, things.
Today that was finally announced. It’s been lots of fun working on this. Enablement aside, we also created a very minimal webdm, it is a Web Device Management snap framework provided in the store which can be easily installed on existing devices by calling</description>
    </item>
    
    <item>
      <title>Ubuntu Core</title>
      <link>http://blog.sergiusens.org/posts/ubuntu-core/</link>
      <pubDate>Wed, 10 Dec 2014 18:15:38 +0200</pubDate>
      
      <guid>http://blog.sergiusens.org/posts/ubuntu-core/</guid>
      <description>Ubuntu Core is what we&amp;rsquo;ve been working on this past time, it has been an interesting ride. It was developed completely in the open, there was just no real promotion about it until we were ready.
If you had noticed, we use ubuntu-device-flash to create this core image, and for development we used it across the board with the core subcommand. We did learn a couple of things from the phone and decided to just provide a static image that we could make sure would work for everyone giving it a try (aka more QA).</description>
    </item>
    
  </channel>
</rss>